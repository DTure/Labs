%Lab3_2

% Очистка робочої пам'яті і закриття графічних вікон
clear; 
close all;

% Для виконання завдання імпортуємо попередній скрипт
Lab3_1;

% Набір обмежень ширини смуги частот 
%fMin = 0; fMax = 400;
%fMin = 190; fMax = 194;
%fMin = 188; fMax = 196;
%fMin = 192; fMax = 201;
fMin = 400; fMax = 800;

% Будуємо дійсну логічну маску
ind = (fMin<=f & f<=fMax);
ind(2:end) = ind(2:end) | ind(end:-1:2);

% Будуємо усічений спектр
Sp = zeros(size(S));
Sp(ind) = S(ind);

% Виконуємо зворотне перетворення Фур'є 
% та повртаємо постійну складову
sp = ifft(Sp) + mean(s);

% Формуємо зображення
pImage = reshape( sp, J, M )';

% Відображаємо отримане зображення
figure('Name', 'Зображення після фільтрації');
imshow(pImage); 
title('Фільтроване зображення');

% Графічно зіставляємо сигналу розкладання на вході і на 
% виході каналу для оригіналу та фільтрованого
figure('Name', 'Фільтрований відеосигнал', 'WindowStyle', 'docked');
subplot(2,1,1); plot(t, s, '.b-', t, sp, '.r-'); grid on;
axis([t(J*M/L-5.5*J) t(J*M/L-2.5*J) -inf inf]);
legend('Оригінал','Фільтрований');
xlabel('t, мс');
ylabel('s(t)');
title('Середина першого рядка оригінального та фільтрованого відеосигналу');

subplot(2,1,2); plot(t, s, '.b-', t, sp, '.r-'); grid on;
axis([t(J*M/L-2.5*J) t(J*M/L+0.5*J) -inf inf]);
legend('Оригінал','Фільтрований');
xlabel('t, мс');
ylabel('s(t)');
title('Кінець першого рядка оригінального та фільтрованого відеосигналу ');

% Аналогічно для зіставлення на одному графіку вхідного і
% вихідного спектрів сигналу розкладання зображенн
figure('Name', 'Фільтрований спектр', 'WindowStyle', 'docked');
plot(f, abs(S), '.b-', f, abs(Sp), '.r-'); grid on;
axis([f(1) fs/4 -inf inf]);
legend('Оригінал','Фільтрований');
xlabel('f, кГц');
ylabel('|S(f)|');
title('Оригінальний та фільтрований спектри');

